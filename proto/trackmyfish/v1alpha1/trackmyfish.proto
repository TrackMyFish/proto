syntax = "proto3";

package trackmyfish.v1alpha1;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "protoc-gen-validate/validate/validate.proto";

option go_package = "github.com/trackmyfish/api/trackmyfish/v1alpha1;trackmyfishv1alpha1";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "TrackMyFish API";
    version: "1.0-alpha1";
  };
  consumes: "application/json";
  produces: "application/json";
};

service TrackMyFishService {
  // Heartbeat
  //
  // Provides information about the service health
  rpc Heartbeat(HeartbeatRequest) returns (HeartbeatResponse) {
    option (google.api.http) = {
      get: "/v1alpha1/heartbeat"
    };
  };

  // AddFish
  //
  // Adds a new Fish
  rpc AddFish(AddFishRequest) returns (AddFishResponse) {
    option (google.api.http) = {
      post: "/v1alpha1/fish",
      body: "fish"
    };
  };

  // ListFish
  //
  // Lists Fish
  rpc ListFish(ListFishRequest) returns (ListFishResponse) {
    option (google.api.http) = {
      get: "/v1alpha1/fish"
    };
  };

  // DeleteFish
  //
  // Deletes a Fish
  rpc DeleteFish(DeleteFishRequest) returns (DeleteFishResponse) {
    option (google.api.http) = {
      delete: "/v1alpha1/fish/{id=*}"
    };
  };

  // AddTankStatistic
  //
  // Adds a new tank statistic
  rpc AddTankStatistic(AddTankStatisticRequest) returns (AddTankStatisticResponse) {
    option (google.api.http) = {
      post: "/v1alpha1/tank/statistics",
      body: "tank_statistic"
    };
  };

  // ListTankStatistics
  //
  // Lists tank statistics
  rpc ListTankStatistics(ListTankStatisticsRequest) returns (ListTankStatisticsResponse) {
    option (google.api.http) = {
      get: "/v1alpha1/tank/statistics"
    };
  };

  // DeleteTankStatistic
  //
  // Deletes a tank statistic
  rpc DeleteTankStatistic(DeleteTankStatisticRequest) returns (DeleteTankStatisticResponse) {
    option (google.api.http) = {
      delete: "/v1alpha1/tank/statistics/{id=*}"
    };
  };

  // AddTank
  //
  // Adds a new tank
  rpc AddTank(AddTankRequest) returns (AddTankResponse) {
    option (google.api.http) = {
      post: "/v1alpha1/tanks",
      body: "tank"
    };
  };

  // ListTanks
  //
  // Lists tanks
  rpc ListTanks(ListTanksRequest) returns (ListTanksResponse) {
    option (google.api.http) = {
      get: "/v1alpha1/tanks"
    };
  };

  // DeleteTank
  //
  // Deletes a tank
  rpc DeleteTank(DeleteTankRequest) returns (DeleteTankResponse) {
    option (google.api.http) = {
      delete: "/v1alpha1/tanks/{id=*}"
    };
  };
}

message HeartbeatRequest {};

message HeartbeatResponse {};

message AddFishRequest {
  // The fish to add
  Fish fish = 1;

}

message AddFishResponse {
  // The added fish
  Fish fish = 1;
}

message ListFishRequest {}

message ListFishResponse {
  // The list of fish
  repeated Fish fish = 1;
}

message DeleteFishRequest {
  // The unique identifier of the change.
  int32 id = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "Fish"
  ];
}

message DeleteFishResponse {
  // The deleted fish
  Fish fish = 1;
}

message AddTankStatisticRequest {
  // The tank statistic to add
  TankStatistic tank_statistic = 1;
}

message AddTankStatisticResponse {
  // The added tank statistic
  TankStatistic tank_statistic = 1;
}

message ListTankStatisticsRequest {}

message ListTankStatisticsResponse {
  // The list of tank statistics
  repeated TankStatistic tank_statistics = 1;
}

message DeleteTankStatisticRequest {
  // The unique identifier of the change.
  int32 id = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "TankStatistic"
  ];
}

message DeleteTankStatisticResponse {
  // The deleted tank statistic
  TankStatistic tank_statistic = 1;
}

message AddTankRequest {
  // The tank to add
  Tank tank = 1;
}

message AddTankResponse {
  // The added tank
  Tank tank = 1;
}

message ListTanksRequest {}

message ListTanksResponse {
  // The list of tanks
  repeated Tank tanks = 1;
}

message DeleteTankRequest {
  // The unique identifier of the change.
  int32 id = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "Tank"
  ];
}

message DeleteTankResponse {
  // The deleted tank
  Tank tank = 1;
}

message HeartbeatStatus {
  enum Status {
    UNSPECIFIED = 0;
    OPERATIONAL = 1;
    DEGRADED = 2;
    DOWN = 3;
  }

  Status status = 1;
};

message TankStatistic {
  // The unique identifier of the tank statistic.
  int32 id = 1 [
    (google.api.field_behavior) = OUTPUT_ONLY
  ];

  // The date of tank test
  string test_date = 2 [
    (google.api.field_behavior) = OPTIONAL
  ];

  // The pH level of the tank
  oneof optional_ph {
    float ph = 3 [
      (google.api.field_behavior) = OPTIONAL
    ];
  }

  // The GH level of the tank
  oneof optional_gh {
    float gh = 4 [
      (google.api.field_behavior) = OPTIONAL
    ];
  }

  // The KH level of the tank
  oneof optional_kh {
    float kh = 5 [
      (google.api.field_behavior) = OPTIONAL
    ];
  }

  // The Ammonia level of the tank
  oneof optional_ammonia {
    float ammonia = 6 [
      (google.api.field_behavior) = OPTIONAL
    ];
  }

  // The Nitrite level of the tank
  oneof optional_nitrite {
    float nitrite = 7 [
      (google.api.field_behavior) = OPTIONAL
    ];
  }

  // The Nitrate level of the tank
  oneof optional_nitrate {
    float nitrate = 8 [
      (google.api.field_behavior) = OPTIONAL
    ];
  }

  // The Phosphate level of the tank
  oneof optional_phosphate {
    float phosphate = 9 [
      (google.api.field_behavior) = OPTIONAL
    ];
  }
}

message Tank {
  // The unique identifier of the tank
  int32 id = 1 [
    (google.api.field_behavior) = OUTPUT_ONLY
  ];

  // The make of the tank
  string make = 2 [
    (google.api.field_behavior) = OPTIONAL
  ];

  // The model of the tank
  string model = 3 [
    (google.api.field_behavior) = OPTIONAL
  ];

  // The name of the tank
  string name = 4 [
    (google.api.field_behavior) = OPTIONAL
  ];

  // The location of the tank
  string location = 5 [
    (google.api.field_behavior) = OPTIONAL
  ];

  enum CapacityMeasurement {
    UNSPECIFIED = 0;
    LITRES = 1;
    GALLONS = 2;
  }

  // The capacity measurement of the tank
  CapacityMeasurement capacity_measurement = 6 [
    (google.api.field_behavior) = OPTIONAL
  ];

  // The capacity of the tank
  oneof optional_capacity {
    float capacity = 7 [
      (google.api.field_behavior) = OPTIONAL
    ];
  }

  // The capacity of the tank
  string description = 8 [
    (google.api.field_behavior) = OPTIONAL
  ];

}

message Fish {
  // The unique identifier of the fish.
  int32 id = 1 [
    (google.api.field_behavior) = OUTPUT_ONLY
  ];

  // The type of the fish (e.g. Gourami)
  string type = 2 [
    (google.api.field_behavior) = OUTPUT_ONLY
  ];

  // The subtype of the fish (e.g. Pearl)
  string subtype = 3 [
    (google.api.field_behavior) = OUTPUT_ONLY
  ];

  // The color of the fish
  string color = 4 [
    (google.api.field_behavior) = OPTIONAL
  ];

  enum Gender {
    UNSPECIFIED = 0;
    MALE = 1;
    FEMALE = 2;
  }

  // The gender of the fish
  Gender gender = 5 [
    (google.api.field_behavior) = OPTIONAL
  ];

  // The date of purchase of the fish
  string purchase_date = 6 [
    (google.api.field_behavior) = OPTIONAL
  ];

  // The number of fish matching this description
  int32 count = 7 [
    (google.api.field_behavior) = OPTIONAL
  ];
}
